#!/usr/bin/env drush
<?php

  // generate class get/sets based on Drupal content type

  $args = drush_get_arguments() ;
  $classname = array_key_exists(2,$args) ? $args[2] : "unknown";
  $meths = "";
  $props = "";
  $inits = "";

  // Drupal  API calls
  $fields = field_info_extra_fields('node', $classname, 'form');
  $fields += field_info_instances('node', $classname);
  
  foreach ($fields as $fieldname => $ctdata) {
    // TODO: make all name processing optional, otherwise ensure always works
    $name = str_replace(array('field_project_','field_', ),'', $fieldname);
    //$name = $fieldname;
    $meths .= "  public function get_$name() { return \$this->out(\$this->_project->{$fieldname}, 1); }\n";
    $meths .= "  public function set_$name(\$$name) {}\n\n";
    $props .= "  public \$$name;\n";
    $inits .= "    \$$name = \$this->get('$name');\n";
  }

  // output the following class template:
  
  print "<?php";
?>

/*
 * This is generated code!!!!
 * DO NOT EDIT!!! (unless you want to fork this on it's own)
 * Use "drush @slndev scr test/drush/drupalFields2class1.drush sln_project_360" 
 * on command line from within the dlib root folder
 */

error_reporting(E_ALL);

// TODO: make this relative
drush_include("/home/markus/projects/dlib/src", "node.class");


class <?php print $classname; ?>Class extends nodeClass {

  // remove?
  protected $project = NULL; // why? we already have $node;

  public function __construct($node) {
    parent::__construct($node);
    $this->project = $node; // unnecessary?
    
    // init properties
<?php print $inits; ?>
  }

  // override
  public function toString() { return var_export($this->project, 1); }

  // properties
<?php print $props; ?>

  // methods
<?php print $meths; ?>

} // <?php print $classname; ?>Class


class <?php print $classname; ?>ClassFactory {
  public static function create($node) {
    return new <?php print $classname; ?>Class($node);
  }
} // <?php print $classname; ?>ClassFactory


// example usage

$id = 305;  // random nid, adjust for your own testing

$o = <?php print $classname; ?>ClassFactory::create($id);

print $o->title;

var_dump($o);


